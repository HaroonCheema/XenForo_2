window.XFMG=window.XFMG||{};
((g,h)=>{XFMG.ImageNoter=XF.Element.newHandler({options:{image:".js-mediaImage",toggleId:"#js-noterToggle",editUrl:null},image:null,cropper:null,toggle:null,cropBox:null,editingNote:null,active:!1,trigger:null,tooltip:null,init(){const a=this.target.querySelector(this.options.image),b=h.querySelector(this.options.toggleId);a&&a.matches("img")||console.error("Image noter must contain an img element");this.image=a;if(a.complete)this.prepareNotes();else XF.on(a,"load",XF.proxy(this,"prepareNotes"));
XF.on(g,"resize",XF.proxy(this,"prepareNotes"),{passive:!0});b&&(this.toggle=b,XF.on(b,"click",XF.proxy(this,"toggleNewNoteEditor")))},prepareNotes(){const a=this.image,b=a.naturalWidth/a.width;Array.from(this.target.querySelectorAll(".js-mediaNote")).forEach(c=>{const d=JSON.parse(c.dataset.noteData)||{};for(const e in d)XF.hasOwn(d,e)&&(d[e+"_"]=d[e]/b);c.style.left=`${d.tag_x1_}px`;c.style.top=`${d.tag_y1_}px`;c.style.width=`${d.tag_width_}px`;c.style.height=`${d.tag_height_}px`;XF.DataStore.get(c,
"prepared")||this.initNote(c)})},initNote(a){const b=this.getTooltipElement(a),c=new XF.TooltipElement(b.cloneNode(!0).outerHTML,{extraClass:"tooltip--mediaNote tooltip--mediaNote--plain",noTouch:!1,html:!0}),d=this.target.querySelector(".media-container-image");c.addSetupCallback(f=>{XF.on(f,"mouseenter",()=>d.classList.add("is-tooltip-active"));XF.on(f,"mouseleave",()=>d.classList.remove("is-tooltip-active"));if(f=f.querySelector(".js-mediaNoteTooltipEdit"))XF.on(f,"click",XF.proxy(this,"editNote",
a))});const e=new XF.TooltipTrigger(a,c,{maintain:!0,trigger:"hover focus click"});e.init();XF.DataStore.set(a,"prepared",!0);XF.DataStore.set(a,"tooltip",c);XF.DataStore.set(a,"trigger",e);XF.display(a);b.remove()},getTooltipElement(a){return XF.findRelativeIf("< .js-mediaContainerImage | .js-mediaNoteTooltip"+a.dataset.noteId,a)},editNote(a){const b=JSON.parse(a.dataset.noteData);XF.trigger(a,"tooltip:hide");this.cropper=new Cropper(this.image,{viewMode:2,dragMode:"none",aspectRatio:1,modal:!1,
highlight:!1,movable:!1,rotatable:!1,scalable:!1,zoomable:!1,toggleDragModeOnDblclick:!1,data:{x:b.tag_x1,y:b.tag_y1,width:b.tag_width,height:b.tag_height},ready:()=>{this.editingNote=a;this.cropBox=this.target.querySelector(".cropper-crop-box");this.tooltip||this.trigger||(this.tooltip=new XF.TooltipElement(XF.proxy(this,"getEditNoteTooltipContent"),{extraClass:"tooltip--mediaNote",html:!0,loadRequired:!0}),this.trigger=new XF.TooltipTrigger(this.cropBox,this.tooltip,{maintain:!0,trigger:"",onShow(c,
d){c=d.tooltip;const e=c.querySelector("textarea");if(e)XF.on(c,"tooltip:shown",()=>XF.trigger(e,"autosize"))}}),this.trigger.init(),XF.trigger(this.cropBox,"tooltip:show"),XF.trigger(this.image,"cropend"))},cropstart:XF.proxy(this,"editNoteCropstart"),cropend:XF.proxy(this,"editNoteCropend")})},editNoteCropstart(a){this.trigger&&XF.trigger(this.cropBox,"tooltip:hide")},editNoteCropend(a){XF.trigger(this.cropBox,"tooltip:show");XF.on(this.tooltip.tooltip,"tooltip:shown",b=>{b=b.target;const c=this.getCoordsFromCropper();
b.querySelector(".js-noteData").value=JSON.stringify(c)})},getEditNoteTooltipContent(a){XF.ajax("get",this.options.editUrl,{note_id:this.editingNote.dataset.noteId},b=>{this.editNoteLoaded(b,a)},{skipDefault:!0,skipError:!0,global:!1})},editNoteLoaded:function(a,b){a.html&&XF.setupHtmlInsert(a.html,(c,d,e)=>{b(c);d=c.querySelector(".js-cancelButton");XF.on(d,"click",XF.proxy(this,"editNoteCancel"));XF.on(c,"ajax-submit:response",XF.proxy(this,"editNoteHandle"))})},editNoteCancel(a){this.cropBox&&
(XF.trigger(this.cropBox,"tooltip:hide"),this.cropBox=null);this.tooltip&&(this.tooltip.destroy(),this.trigger=this.tooltip=null);this.cropper.destroy();this.editingNote=null;"string"===typeof a&&XF.flashMessage(a,3E3)},editNoteHandle(a){const {data:b}=a;b.errors||b.exception||(a.preventDefault(),XF.DataStore.get(this.editingNote,"tooltip").destroy(),this.editingNote.remove(),b.deleted?this.editNoteCancel(b.message):(XF.setupHtmlInsert(b.html,(c,d,e)=>{this.target.querySelector(".js-mediaContainerImage").prepend(c);
this.editNoteCancel(b.message);XF.activate(c)}),setTimeout(()=>this.prepareNotes(),500)))},toggleNewNoteEditor:function(){this.active?this.disableNewNoteEditor():this.enableNewNoteEditor()},disableNewNoteEditor(a){if(this.active){this.cropBox&&XF.trigger(this.cropBox,"tooltip:hide");this.tooltip&&(this.tooltip.destroy(),this.trigger=this.tooltip=null);this.cropper.destroy();var b=this.toggle;b.querySelector(".button-text").innerHTML=XF.htmlspecialchars(b.dataset.inactiveLabel);var c;null==(c=b.querySelector("i.fa--xf"))||
c.remove();b.dataset.inactiveIcon&&b.prepend(XF.createElementFromString(XF.Icon.getIcon("default",b.dataset.inactiveIcon)));a?XF.flashMessage(a,3E3):XF.flashMessage(b.dataset.inactiveMessage,3E3);this.active=!1}},enableNewNoteEditor(){this.active||(this.cropper=new Cropper(this.image,{viewMode:2,dragMode:"crop",aspectRatio:1,modal:!1,highlight:!1,autoCrop:!1,movable:!1,rotatable:!1,scalable:!1,zoomable:!1,toggleDragModeOnDblclick:!1,ready:XF.proxy(this,"newNoteReady"),cropstart:XF.proxy(this,"newNoteCropstart"),
cropend:XF.proxy(this,"newNoteCropend")}))},newNoteReady(){const a=this.toggle;a.querySelector(".button-text").innerHTML=XF.htmlspecialchars(a.dataset.activeLabel);let b;null==(b=a.querySelector("i.fa--xf"))||b.remove();a.dataset.activeIcon&&a.prepend(XF.createElementFromString(XF.Icon.getIcon("default",a.dataset.activeIcon)));this.cropBox=this.target.querySelector(".cropper-crop-box");XF.flashMessage(a.dataset.activeMessage,3E3);this.active=!0},newNoteCropstart:function(a){this.trigger&&XF.trigger(this.cropBox,
"tooltip:hide")},newNoteCropend:function(a){this.tooltip||this.trigger||(this.tooltip=new XF.TooltipElement(XF.proxy(this,"getNewNoteTooltipContent"),{extraClass:"tooltip--mediaNote",html:!0,loadRequired:!0}),this.trigger=new XF.TooltipTrigger(this.cropBox,this.tooltip,{maintain:!0,trigger:""}),this.trigger.init());XF.trigger(this.cropBox,"tooltip:show");XF.on(this.tooltip.tooltip,"tooltip:shown",b=>{b=b.target;const c=this.getCoordsFromCropper();b.querySelector(".js-noteData").value=JSON.stringify(c)})},
getNewNoteTooltipContent(a){XF.ajax("get",this.options.editUrl,{},b=>{this.newNoteLoaded(b,a)},{skipDefault:!0,skipError:!0,global:!1})},newNoteLoaded(a,b){a.html&&XF.setupHtmlInsert(a.html,(c,d,e)=>{b(c);d=c.querySelector(".js-cancelButton");XF.on(d,"click",XF.proxy(this,"newNoteCancel"));XF.on(c,"ajax-submit:response",XF.proxy(this,"newNoteHandle"))})},newNoteCancel(){XF.trigger(this.cropBox,"tooltip:hide");this.cropper.clear()},newNoteHandle(a){const {data:b}=a;b.errors||b.exception||(a.preventDefault(),
XF.setupHtmlInsert(b.html,(c,d,e)=>{this.target.querySelector(".js-mediaContainerImage").prepend(c);this.disableNewNoteEditor(b.message);XF.activate(c)}),setTimeout(()=>this.prepareNotes(),500))},getCoordsFromCropper:function(){const a=this.cropper.getData(!0);return{tag_x1:a.x,tag_y1:a.y,tag_width:a.width,tag_height:a.height}}});XF.Element.register("image-noter","XFMG.ImageNoter")})(window,document);
