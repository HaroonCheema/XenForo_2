<?xml version="1.0" encoding="utf-8"?>
<templates>
  <template type="admin" title="fs_edit_zoom_meeting" version_id="1000010" version_string="1.0.0 Alpha"><![CDATA[<xf:if is="$meeting.isInsert()">
	<xf:title>{{ phrase('fs_add_meeting') }}</xf:title>
	<xf:else />
	<xf:title>{{ phrase('fs_edit_meeting:') }} {$meeting.topic}</xf:title>
</xf:if>

<xf:pageaction if="$meeting.isUpdate()">
	<xf:button href="{{ link('zoom-meeting/delete', $meeting) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('zoom-meeting/save', $meeting) }}"  ajax="true" data-xf-init="attachment-manager" >

	<div class="block-container">
		<div class="block-body">

			<xf:textboxrow name="topic" value="{$meeting.topic}"  required="true" autofocus="true"
						   label="{{ phrase('fs_zoom_meeting_topic') }}" />

			<h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{phrase('fs_meeting_timing')}}</span></h2>
			<xf:formrow rowtype="input"
						label="{{ phrase('fs_start_time') }}">
				<div class="inputGroup">

					<xf:dateinput name="start_date" class="date start" value="{{$meeting.start_time ? $meeting.start_time : ''}}" required="true"
								  hint="{{ phrase('required') }}"/>

					<span class="inputGroup-splitter"></span>

					<xf:textbox name="start_time" class="input--date time start" required="true" type="time"
								value="{{$meeting.start_time ? $meeting.getStartTimeConvert() : ''}}"
								data-xf-init="time-picker" data-moment="{{$meeting.start_time ? $meeting.getStartTimeConvert() : ''}}" data-format="{{ $xf.language.time_format }}" />

				</div>
			</xf:formrow>

			<xf:numberboxrow name="duration" value="{{$meeting.duration}}" min="10" 			
							 label="{{ phrase('fs_duration') }}"  explain="{{phrase('fs_duration_explain')}}"/>

			<h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{phrase('fs_join_meeting_validation')}}</span></h2>
			<xf:selectrow name="join_usergroup_ids[]" multiple="multiple" size="5" value="{{$meeting.join_usergroup_ids}}"
						  label="{{ phrase('fs_user_groups_allow_join') }}"
						  explain="{{ phrase('fs_user_groups_allow_join_explain') }}"
						  >
				<xf:foreach loop="$userGroups" value="$userGroup">
					<xf:option value="{$userGroup.user_group_id}">{$userGroup.title}</xf:option>
				</xf:foreach>
			</xf:selectrow>
		</div>
	</div>
	<xf:submitrow sticky="true" icon="save" />

</xf:form>]]></template>
  <template type="admin" title="fs_option_template_zoomadvance" version_id="1000010" version_string="1.0.0 Alpha"><![CDATA[<xf:formrow
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	rowclass="{$rowClass}">

	<div>{{ phrase('fs_built_zoom_auth_system') }}</div>
	<div class="u-inputSpacer">
		<xf:button href="{{ link('options/zoom-meeting-auth-setup', $option) }}" data-xf-click="overlay">
			{{ phrase('change') }}
		</xf:button>
	</div>
</xf:formrow>]]></template>
  <template type="admin" title="fs_option_zoom_transport_auth" version_id="1000010" version_string="1.0.0 Alpha"><![CDATA[<xf:title>{$option.title}</xf:title>

<xf:form action="{{ link('options/zoom-meeting-auth-setup', $option) }}"  class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow>
				{{ phrase('fs_zoom_setup_explain:') }}
				<div><code>{$redirectUri}</code></div>
			</xf:inforow>

			<xf:textboxrow name="client_id" value="{$xf.options.fs_zoom_client_id}"
						   label="{{ phrase('client_id') }}"
						   required="required" />

			<xf:textboxrow name="client_secret"
						   value="{$xf.options.fs_zoom_client_secret}"
						   label="{{ phrase('client_secret') }}"
						   required="required" />

			<xf:inforow>
				{{ phrase('fs_continuing_will_redirect_you_to_zoom_to_confirm_account_you_want_to') }}
			</xf:inforow>
		</div>
		<xf:submitrow sticky="true" submit="{{ phrase('continue') }}" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="fs_zoom_meeting" version_id="1000010" version_string="1.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('fs_meeting_list') }}</xf:title>

<xf:if is="$meeting is empty">
	<xf:pageaction>
		<xf:button href="{{ link('zoom-meeting/add') }}" icon="user">{{ phrase('fs_add_meeting') }}</xf:button>
	</xf:pageaction>
</xf:if>

<xf:if is="$meeting is not empty">
	<xf:form action="{{ link('zoom-meeting/toggle') }}" class="block" ajax="true">
		<div class="block-container">
			<div class="block-body">

				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('fs_zoom_topic') }}</xf:cell>
						<xf:cell>{{ phrase('fs_start_date') }}</xf:cell>
						<xf:cell>{{ phrase('fs_start_time') }}</xf:cell>
						<xf:cell>{{ phrase('fs_duration') }}</xf:cell>
						<xf:comment><xf:cell>{{ phrase('fs_start_url') }}</xf:cell>
							<xf:cell>{{ phrase('fs_join_url') }}</xf:cell></xf:comment>
						<xf:cell class="dataList-cell--min">&nbsp;</xf:cell>
					</xf:datarow>

					<xf:datarow>
						<xf:cell>{$meeting.topic}</xf:cell>
						<xf:cell>{$meeting.getStartDate()}</xf:cell>
						<xf:cell>{$meeting.getStartTime()}</xf:cell>
						<xf:cell>{$meeting.duration} mints</xf:cell>
						<xf:comment><xf:cell><xf:macro name="copy_key" arg-url="{{$meeting.z_start_url}}" arg-success="start url successfully copy." arg-targclass="js-startUrl{{$meeting.meeting_id}}"/></xf:cell>
							<xf:cell><xf:macro name="copy_key" arg-url="{{$meeting.z_join_url}}" arg-success="Join url successfully copy." arg-targclass="js-joinUrl{{$meeting.meeting_id}}"/></xf:cell></xf:comment>
						<xf:action href="{{ link('zoom-meeting/edit', $meeting) }}">{{ phrase('edit') }}</xf:action>
					</xf:datarow>

				</xf:datalist>
			</div>
		</div>
	</xf:form>
	<xf:else />
	<div class="blockMessage">{{ phrase('no_results_found') }}</div>
</xf:if>

<xf:macro name="copy_key" arg-url="!" arg-success="!" arg-targclass="">
	<code class="{{$targclass}}" style="display:none;">{$url}</code>
	<xf:button icon="copy"
			   data-xf-init="copy-to-clipboard"
			   data-copy-target=".{{$targclass}}"
			   data-success="{{$success}}"
			   class="button--link is-hidden" />
</xf:macro>]]></template>
  <template type="public" title="fs_host_meeting_start" version_id="1000100" version_string="1.0.1 Alpha"><![CDATA[<style>

	body {
		overflow: visible !important;
	}

	@media (min-width: 1200px) and (max-width: 1399.98px) {
		#zmmtg-root {
			height: 66% !important;
			margin-top: 123px !important;
		}

		.video-share-layout {
			height: 77% !important;
		}
	}

	@media (min-width: 1400px) {
		#zmmtg-root {
			height: 76% !important;
			margin-top: 123px !important;
		}

		.video-share-layout {
			height: 87% !important;
		}
	}


</style>

<script src="https://source.zoom.us/3.9.0/lib/vendor/react.min.js"></script>
<script src="https://source.zoom.us/3.9.0/lib/vendor/react-dom.min.js"></script>
<script src="https://source.zoom.us/3.9.0/lib/vendor/redux.min.js"></script>
<script src="https://source.zoom.us/3.9.0/lib/vendor/redux-thunk.min.js"></script>
<script src="https://source.zoom.us/3.9.0/lib/vendor/lodash.min.js"></script>

<!-- Zoom SDK -->
<script src="https://source.zoom.us/zoom-meeting-3.9.0.min.js"></script>
<div id="zmmtg-root"></div>
<div id="meetingSDKElement"></div>
<script>
	// Set up Zoom Meeting configuration
	const sdkKey = "{{$sdkKey}}";
	const meetingNumber = "{{$meetingNumber}}";
	const role = "{{$role}}";
	const userName = "{{$username}}";
	const userEmail="{{$email}}";
	const passWord = "{{$passWord}}"; 
	const leaveUrl = "{{$redirectUrl}}";
	const signature = "{{$signature}}";

	// Initialize the SDK
	ZoomMtg.setZoomJSLib("https://source.zoom.us/3.9.0/lib", "/av");
	ZoomMtg.preLoadWasm();
	ZoomMtg.prepareWebSDK();

	function startMeeting() {
		ZoomMtg.init({
			leaveUrl: leaveUrl,
			disableCORP: !window.crossOriginIsolated,
			success: function () {
				ZoomMtg.join({
					sdkKey: sdkKey,
					signature: signature,
					meetingNumber: meetingNumber,
					userName: userName,
					passWord: passWord,
					success: function () {
						console.log("Joined Zoom meeting successfully");
					},
					error: function (error) {
						console.error("Error joining meeting:", error);
					}
				});
			},
			error: function (error) {
				console.error("Error initializing Zoom SDK:", error);
			}
		});
	}

	document.addEventListener("DOMContentLoaded", startMeeting);
</script>]]></template>
  <template type="public" title="fs_join_meeting_start" version_id="1000200" version_string="1.0.2 Alpha"><![CDATA[<xf:if is="!$xf.visitor.user_id || !$xf.visitor.is_admin">
	<style>

		body {
			overflow: visible !important;
		}

		@media (min-width: 1200px) and (max-width: 1399.98px) {
			#zmmtg-root {
				height: 68% !important;
				margin-top: 151px !important;
			}

			.video-share-layout {
				height: 80% !important;
			}
		}

		@media (min-width: 1400px) {
			#zmmtg-root {
				height: 78% !important;
				margin-top: 151px !important;
			}

			.video-share-layout {
				height: 87% !important;
			}
		}


	</style>
	<xf:else />
	<style>

		body {
			overflow: visible !important;
		}

		@media (min-width: 1200px) and (max-width: 1399.98px) {
			#zmmtg-root {
				height: 63% !important;
				margin-top: 185px !important;
			}

			.video-share-layout {
				height: 77% !important;
			}
		}

		@media (min-width: 1400px) {
			#zmmtg-root {
				height: 74% !important;
				margin-top: 185px !important;
			}

			.video-share-layout {
				height: 87% !important;
			}
		}


	</style>
</xf:if>


<xf:comment>

	<xf:if is="!$xf.visitor.user_id || !$xf.visitor.is_admin">
		<style>

			body {
				overflow: visible !important;
			}

			@media (min-width: 1200px) and (max-width: 1399.98px) {
				#zmmtg-root {
					height: 71% !important;
					margin-top: 87px !important;
				}

				.video-share-layout {
					height: 80% !important;
				}
			}

			@media (min-width: 1400px) {
				#zmmtg-root {
					height: 80% !important;
					margin-top: 87px !important;
				}

				.video-share-layout {
					height: 87% !important;
				}
			}


		</style>
		<xf:else />
		<style>

			body {
				overflow: visible !important;
			}

			@media (min-width: 1200px) and (max-width: 1399.98px) {
				#zmmtg-root {
					height: 66% !important;
					margin-top: 123px !important;
				}

				.video-share-layout {
					height: 77% !important;
				}
			}

			@media (min-width: 1400px) {
				#zmmtg-root {
					height: 76% !important;
					margin-top: 123px !important;
				}

				.video-share-layout {
					height: 87% !important;
				}
			}


		</style>
	</xf:if>

</xf:comment>

<script src="https://source.zoom.us/3.9.0/lib/vendor/react.min.js"></script>
<script src="https://source.zoom.us/3.9.0/lib/vendor/react-dom.min.js"></script>
<script src="https://source.zoom.us/3.9.0/lib/vendor/redux.min.js"></script>
<script src="https://source.zoom.us/3.9.0/lib/vendor/redux-thunk.min.js"></script>
<script src="https://source.zoom.us/3.9.0/lib/vendor/lodash.min.js"></script>

<!-- Zoom SDK -->
<script src="https://source.zoom.us/zoom-meeting-3.9.0.min.js"></script>
<div id="zmmtg-root"></div>
<div id="meetingSDKElement"></div>
<script>
	// Set up Zoom Meeting configuration
	const sdkKey = "{{$sdkKey}}";
	const meetingNumber = "{{$meetingNumber}}";
	const role = "{{$role}}";
	const userName = "{{$username}}";
	const userEmail="{{$email}}";
	const passWord = "{{$passWord}}";
	const leaveUrl = "{{$redirectUrl}}";
	const signature = "{{$signature}}";
	const tk = "{{$tk}}";

	// Initialize the SDK
	ZoomMtg.setZoomJSLib("https://source.zoom.us/3.9.0/lib", "/av");
	ZoomMtg.preLoadWasm();
	ZoomMtg.prepareWebSDK();

	function startMeeting() {
		ZoomMtg.init({
			leaveUrl: leaveUrl,
			disableCORP: !window.crossOriginIsolated,
			success: function () {
				ZoomMtg.join({
					sdkKey: sdkKey,
					signature: signature,
					meetingNumber: meetingNumber,
					userName: userName,
					passWord: passWord,
					tk:tk,
					success: function () {
						console.log("Joined Zoom meeting successfully");
					},
					error: function (error) {
						console.error("Error joining meeting:", error);
					}
				});
			},
			error: function (error) {
				console.error("Error initializing Zoom SDK:", error);
			}
		});
	}

	document.addEventListener("DOMContentLoaded", startMeeting);
</script>]]></template>
  <template type="public" title="fs_zoom_meeting_guest_joiners" version_id="1000010" version_string="1.0.0 Alpha"><![CDATA[<xf:title>{{$meeting.topic}}</xf:title>

<xf:form action="{{ link('video-chat/') }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:formrow label="{{ phrase('username') }}" explain="{{phrase('fs_username_required_to_join_meeting')}}">
				<xf:textbox  name="guest_username" required="true"
							/>
			</xf:formrow>
		</div>
		<xf:submitrow icon="save" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="public" title="fs_zoom_meetings_members_online" version_id="1000010" version_string="1.0.0 Alpha"><![CDATA[<div class="block" data-widget-section="onlineNow"{{ widget_data($widget) }}>
	<div class="block-container">
		<h3 class="block-minorHeader"><a href="#">{$title}</a></h3>
		<div class="block-body">
			<div class="block-row block-row--minor">
				<xf:if is="$online is not empty">
					<ul class="listInline listInline--comma">
						<xf:foreach loop="$online" value="$val"><xf:trim>
							<li><xf:if is="$val.User">
								<xf:username user="$val.User" rich="true" class="{{ !$val.User ? 'username--invisible' : '' }}" />
								<xf:else />
								{{$val.username}}
								</xf:if></li>
							</xf:trim></xf:foreach>
					</ul>
					<xf:else />
					{{ phrase('no_members_online_now') }}
				</xf:if>
			</div>
		</div>
		<div class="block-footer">
			<span class="block-footer-counter">{{ phrase('online_now_x_members_y_guests_z',{
				'total': number($total),
				'members': number($members),
				'guests': number($guests)})
				}}</span>
		</div>
	</div>
</div>]]></template>
</templates>
