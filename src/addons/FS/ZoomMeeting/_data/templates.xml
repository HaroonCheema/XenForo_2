<?xml version="1.0" encoding="utf-8"?>
<templates>
  <template type="admin" title="edit_zoom_category" version_id="1000010" version_string="1.0.0 Alpha"><![CDATA[<xf:if is="$category.isInsert()">
	<xf:title>{{ phrase('add_category') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_category:') }} {$category.title}</xf:title>
</xf:if>

<xf:pageaction if="$category.category_id">
	<xf:button href="{{ link('zoom-categories/delete', $category) }}"
		icon="delete"
		data-xf-click="overlay" />
</xf:pageaction>

<xf:form action="{{ link('zoom-categories/save', $category) }}" ajax="true" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:textboxrow name="title" value="{$category.title}"
				label="{{ phrase('title') }}" />

			<xf:textarearow name="description" value="{$category.description}" rows="2" autosize="true"
				label="{{ phrase('description') }}"
				hint="{{ phrase('you_may_use_html') }}" />

			<xf:macro template="category_tree_macros" name="parent_category_select_row"
				arg-category="{$category}"
				arg-categoryTree="{$categoryTree}" />

			<xf:macro template="display_order_macros" name="row"
					  arg-value="{$category.display_order}" />
			
			<xf:submitrow sticky="true" icon="save" />
		</div>
	</div>
</xf:form>]]></template>
  <template type="admin" title="edit_zoom_meeting" version_id="1000710" version_string="1.0.7 Alpha"><![CDATA[<xf:if is="$meeting.isInsert()">
	<xf:title>{{ phrase('add_meeting') }}</xf:title>
<xf:else />
	<xf:title>{{ phrase('edit_meeting:') }} {$meeting.topic}</xf:title>
</xf:if>

<xf:pageaction if="$meeting.isUpdate()">
	<xf:button href="{{ link('meetings/delete', $meeting) }}" icon="delete" overlay="true" />
</xf:pageaction>

<xf:form action="{{ link('meetings/save', $meeting) }}"  ajax="true" data-xf-init="attachment-manager" >

	<div class="block-container">
		<div class="block-body">
		
			<xf:textboxrow name="topic" value="{$meeting.topic}"  required="true" autofocus="true"
				label="{{ phrase('zoom_meeting_topic') }}" />
			
			<xf:selectrow name="category_id" value="{$item.category_id}" label="{{ phrase('categories') }}" required="true">
				<xf:foreach loop="$categories" value="$category">
					<xf:option value="{$category.category_id}" label="{$category.title}" />
				</xf:foreach>
			</xf:selectrow>
			
			<xf:editorrow name="description" value="{{$meeting.Thread ? $meeting.Thread.FirstPost.message : ''}}" 
				label="{{ phrase('zoom_meeting_description') }}" />
	
			
			
		  <h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{phrase('meeting_timing')}}</span></h2>
			<xf:formrow rowtype="input"
							label="{{ phrase('start_time') }}">
						<div class="inputGroup">
			
					<xf:dateinput name="start_date" class="date start" value="{{$meeting.start_time ? $meeting.start_time : ''}}" required="true"
						hint="{{ phrase('required') }}"/>
							
					<span class="inputGroup-splitter"></span>
						
					<xf:textbox name="start_time" class="input--date time start" required="true" type="time"
						value="{{$meeting.start_time ? $meeting.getStartTimeConvert() : ''}}"
						data-xf-init="time-picker" data-moment="{{$meeting.start_time ? $meeting.getStartTimeConvert() : ''}}" data-format="{{ $xf.language.time_format }}" />
					
						</div>
				</xf:formrow>
			
			 	<xf:numberboxrow name="duration" value="{{$meeting.duration}}" min="10" 			
										label="{{ phrase('duration') }}"  explain="{{phrase('duration_explain')}}"/>
			
			  <h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{phrase('meeting_discussion')}}</span></h2>
		
			<xf:textboxrow name="thread_title" value="{$meeting.Thread.title}"  required="true" autofocus="true"
					label="{{ phrase('discussion_title') }}" explain="{{ phrase('discussion_title_explain') }}" />
			
			 <xf:formrow label="{{phrase('destination_forum')}}">
			
				 <xf:select name="forum_id" value="{$meeting.forum_id}" id="js-applicableForums">

						<xf:foreach loop="$nodeTree.getFlattened(0)" value="$treeEntry">
							<xf:option value="{$treeEntry.record.node_id}"
								disabled="{{ $treeEntry.record.node_type_id != 'Forum' }}"
								label="{{ repeat('&nbsp;&nbsp;', $treeEntry.depth)|raw }} {$treeEntry.record.title}" />
						</xf:foreach>

					</xf:select>
			</xf:formrow>
			  <h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{phrase('join_meeting_validation')}}</span></h2>
		     <xf:selectrow name="join_usergroup_ids[]" multiple="multiple" size="5" value="{{$meeting.join_usergroup_ids}}"
									  label="{{ phrase('user_groups_allow_join') }}"
						              explain="{{ phrase('user_groups_allow_join_explain') }}"
									  >
							<xf:foreach loop="$userGroups" value="$userGroup">
								<xf:option value="{$userGroup.user_group_id}">{$userGroup.title}</xf:option>
							</xf:foreach>
			</xf:selectrow>
			<xf:comment>
				<h2 class="block-formSectionHeader"><span class="block-formSectionHeader-aligner">{{phrase('alert_before_meeting_start')}}</span></h2>
				<xf:numberboxrow name="alert_duration" value="{{$meeting.alert_duration}}" min="1" 			
											label="{{ phrase('alert_send') }}"  explain="{{phrase('alert_send_explain')}}"/>
			</xf:comment>
		</div>
	</div>
		<xf:submitrow sticky="true" icon="save" />
			
</xf:form>]]></template>
  <template type="admin" title="option_template_zoomadvance" version_id="1000010" version_string="1.0.0 Alpha"><![CDATA[<xf:formrow
	label="{$option.title}"
	hint="{$hintHtml}"
	explain="{$explainHtml}"
	rowclass="{$rowClass}">

	<div>{{ phrase('built_zoom_auth_system') }}</div>
	<div class="u-inputSpacer">
		<xf:button href="{{ link('options/zoom-auth-setup', $option) }}" data-xf-click="overlay">
			{{ phrase('change') }}
		</xf:button>
	</div>
</xf:formrow>]]></template>
  <template type="admin" title="option_zoom_transport_auth" version_id="1000010" version_string="1.0.0 Alpha"><![CDATA[<xf:title>{$option.title}</xf:title>

<xf:form action="{{ link('options/zoom-auth-setup', $option) }}"  class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow>
				{{ phrase('zoom_setup_explain:') }}
				<div><code>{$redirectUri}</code></div>
			</xf:inforow>

			<xf:textboxrow name="client_id" value="{$xf.options.zoom_client_id}"
				label="{{ phrase('client_id') }}"
				required="required" />

			<xf:textboxrow name="client_secret"
						   value="{$xf.options.zoom_client_secret}"
				label="{{ phrase('client_secret') }}"
				required="required" />

			<xf:inforow>
				{{ phrase('continuing_will_redirect_you_to_zoom_to_confirm_account_you_want_to') }}
			</xf:inforow>
		</div>
		<xf:submitrow sticky="true" submit="{{ phrase('continue') }}" />
	</div>
</xf:form>]]></template>
  <template type="admin" title="zoom_category_delete" version_id="1000010" version_string="1.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:macro template="category_tree_macros" name="category_delete_form"
		  arg-linkPrefix="zoom-categories"
		  arg-category="{$category}" />]]></template>
  <template type="admin" title="zoom_category_list" version_id="1000010" version_string="1.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('categories') }}</xf:title>

<xf:macro template="category_tree_macros" name="page_action"
	arg-linkPrefix="zoom-categories" />

<xf:macro template="category_tree_macros" name="category_list"
	arg-categoryTree="{$categoryTree}"
	arg-filterKey="zoom-categories"
	arg-linkPrefix="zoom-categories"
	arg-idKey="category_id"
/>]]></template>
  <template type="admin" title="zoom_category_sort" version_id="1000010" version_string="1.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('sort_categories') }}</xf:title>

<xf:macro template="category_tree_macros" name="sortable_form"
	arg-categoryTree="{$categoryTree}"
	arg-linkPrefix="zoom-categories" />]]></template>
  <template type="admin" title="zoom_meetings" version_id="1000010" version_string="1.0.0 Alpha"><![CDATA[<xf:title>{{ phrase('meeting_list') }}</xf:title>

<xf:pageaction>
	<xf:button href="{{ link('meetings/add') }}" icon="user">{{ phrase('add_meeting') }}</xf:button>
</xf:pageaction>
	<xf:if is="$meetings is not empty">
	       <xf:form action="{{ link('meetings/toggle') }}" class="block" ajax="true">
				<div class="block-outer">
					<xf:macro template="filter_macros" name="quick_filter" arg-key="meetings" arg-class="block-outer-opposite" />
			</div>
				<div class="block-container">
			          <div class="block-body">
			
				<xf:datalist data-xf-init="responsive-data-list">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('zoom_topic') }}</xf:cell>
						<xf:cell>{{ phrase('start_date') }}</xf:cell>
						<xf:cell>{{ phrase('start_time') }}</xf:cell>
						<xf:cell>{{ phrase('duration') }}</xf:cell>
						<xf:cell>{{ phrase('start_url') }}</xf:cell>
						<xf:cell>{{ phrase('join_url') }}</xf:cell>
						<xf:cell>{{ phrase('disucssion') }}</xf:cell>
						<xf:cell class="dataList-cell--min">&nbsp;</xf:cell>
						<xf:cell class="dataList-cell--min">&nbsp;</xf:cell>
					</xf:datarow>
					<xf:foreach loop="$meetings" value="$meeting">
						<xf:datarow>
							<xf:cell>{$meeting.topic}</xf:cell>
							<xf:cell>{$meeting.getStartDate()}</xf:cell>
							<xf:cell>{$meeting.getStartTime()}</xf:cell>
							<xf:cell>{$meeting.duration} mints</xf:cell>
							<xf:cell><xf:macro name="copy_key" arg-url="{{$meeting.z_start_url}}" arg-success="start url successfully copy." arg-targclass="js-startUrl{{$meeting.meeting_id}}"/></xf:cell>
							<xf:cell><xf:macro name="copy_key" arg-url="{{$meeting.z_join_url}}" arg-success="Join url successfully copy." arg-targclass="js-joinUrl{{$meeting.meeting_id}}"/></xf:cell>
							<xf:cell>
								<xf:if is="$meeting.Thread">
										<a href="{{ link_type('public', 'threads',$meeting.Thread) }}" target="_blank">{{$meeting.Thread.title}}</a>
								<xf:else/>
								0
								</xf:if>
							</xf:cell>							
							<xf:action href="{{ link('meetings/edit', $meeting) }}">{{ phrase('edit') }}</xf:action>
							<xf:delete href="{{ link('meetings/delete', $meeting) }}" />
						</xf:datarow>
					</xf:foreach>
				</xf:datalist>
			</div>
			<div class="block-footer">
				<span class="block-footer-counter">{{ display_totals($meetings, $total) }}</span>
			</div>
		</div>
	</xf:form>
		<xf:else />
			<div class="blockMessage">{{ phrase('no_results_found') }}</div>
		</xf:if>
	

	<xf:pagenav page="{$page}" perpage="{$perPage}" total="{$total}"
		link="meetings" params="{$filters}"
		wrapperclass="block-outer block-outer--after" />

<xf:macro name="copy_key" arg-url="!" arg-success="!" arg-targclass="">
	<code class="{{$targclass}}" style="display:none;">{$url}</code>
	<xf:button icon="copy"
		data-xf-init="copy-to-clipboard"
		data-copy-target=".{{$targclass}}"
		data-success="{{$success}}"
		class="button--link is-hidden" />
</xf:macro>]]></template>
  <template type="public" title="alert_user_meeting" version_id="1000510" version_string="1.0.5 Alpha"><![CDATA[{{ phrase('minut_left_to_start_meeting', {
	'title': '<a href="' . base_url($extra.link) . '" class="fauxBlockLink-blockLink">' . $extra.title . '</a>',
    'mint' : $extra.mint
}) }}]]></template>
  <template type="public" title="general_zoom_meeting.less" version_id="1000210" version_string="1.0.2 Alpha"><![CDATA[.status_live,.status_waiting,.status_closed{
	
	font-weight:600;
}
.status_live{
	color:green;
}
.status_waiting{
	color:blue;
}
.status_closed{
	color:red;
}]]></template>
  <template type="public" title="join_zoom_meeting" version_id="1000510" version_string="1.0.5 Alpha"><![CDATA[<xf:title>{{ phrase('confirm_action') }}</xf:title>

<xf:form action="{{ link('meetings/join', $meeting) }}" class="block">
	<div class="block-container">
		<div class="block-body">
			<xf:inforow rowtype="confirm">
				{{ phrase('after_register_you_will_get_join_url') }}
				
			</xf:inforow>
		</div>
	<xf:submitrow icon="save" rowtype="simple" />
	</div>
</xf:form>]]></template>
  <template type="public" title="meeting_overiew.less" version_id="1000210" version_string="1.0.2 Alpha"><![CDATA[// ############################ RESOURCE LIST ######################

.structItem-resourceTagLine
{
	font-size: @xf-fontSizeSmaller;
	margin-top: @xf-paddingSmall;
}

.structItem-cell.structItem-cell--resourceMeta
{
	width: 210px;

	.structItem-metaItem
	{
		margin-top: 3px;

		&:first-child
		{
			margin-top: 0;
		}
	}
}

.structItem-metaItem--rating
{
	font-size: @xf-fontSizeSmall;
}

.structItem-status
{
	&--team::before { .m-faContent(@fa-var-users-crown); color: @xf-textColorAttention; }
}

@media (max-width: @xf-responsiveWide)
{
	.structItem-cell.structItem-cell--resourceMeta
	{
		width: 200px;
		font-size: @xf-fontSizeSmaller;
	}
}

@media (max-width: @xf-responsiveMedium)
{
	.structItem-cell.structItem-cell--resourceMeta
	{
		display: block;
		width: auto;
		float: left;
		padding-top: 0;
		padding-left: 0;
		padding-right: 0;
		color: @xf-textColorMuted;

		.pairs
		{
			display: inline;

			&:before,
			&:after
			{
				display: none;
			}

			> dt,
			> dd
			{
				display: inline;
				float: none;
				margin: 0;
			}
		}

		.structItem-metaItem
		{
			display: inline;
			margin-top: 0;
		}

		.ratingStarsRow
		{
			display: inline;

			.ratingStarsRow-text
			{
				display: none;
			}
		}

		.ratingStars
		{
			font-size: 110%;
			vertical-align: -.2em;
		}

		.structItem-metaItem--lastUpdate > dt
		{
			display: none;
		}

		.structItem-metaItem + .structItem-metaItem:before
		{
			display: inline;
			content: "\20\00B7\20";
			color: @xf-textColorMuted;
		}
	}
}

// #################################### RESOURCE BODY / VIEW ########################

.resourceBody
{
	display: flex;
}

.resourceBody-main
{
	flex: 1;
	min-width: 0;
	padding: @xf-blockPaddingV @xf-blockPaddingH;
}

.resourceBody-main .bbWrapper
{
	.m-clearFix();
}

.resourceBody-sidebar
{
	flex: 0 0 auto;
	width: 250px;
	.xf-contentAltBase();
	border-left: @xf-borderSize solid @xf-borderColor;
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	font-size: @xf-fontSizeSmall;

	> :first-child
	{
		margin-top: 0;
	}

	> :last-child
	{
		margin-bottom: 0;
	}
}

.resourceBody-fields
{
	&.resourceBody-fields--before
	{
		margin-bottom: @xf-paddingLarge;
		padding-bottom: @xf-paddingMedium;
		border-bottom: @xf-borderSize solid @xf-borderColorLight;
	}

	&.resourceBody-fields--after
	{
		margin-top: @xf-paddingLarge;
		padding-top: @xf-paddingMedium;
		border-top: @xf-borderSize solid @xf-borderColorLight;
	}
}

.resourceBody-attachments
{
	margin: .5em 0;
}

.resourceBody .actionBar-set
{
	margin-top: @xf-messagePadding;
	font-size: @xf-fontSizeSmall;
}

.resourceSidebarGroup
{
	margin-bottom: @xf-elementSpacer;

	&.resourceSidebarGroup--buttons
	{
		> .button
		{
			display: block;
			margin: 5px 0;

			&:first-child
			{
				margin-top: 0;
			}

			&:last-child
			{
				margin-bottom: 0;
			}
		}
	}
}

.resourceSidebarGroup-title
{
	margin: 0;
	padding: 0;

	font-size: @xf-fontSizeLarge;
	font-weight: @xf-fontWeightNormal;
	color: @xf-textColorFeature;
	padding-bottom: @xf-paddingMedium;

	.m-hiddenLinks();
}

.resourceSidebarList
{
	.m-listPlain();

	> li
	{
		padding: @xf-paddingSmall 0;

		&:first-child
		{
			padding-top: 0;
		}

		&:last-child
		{
			padding-bottom: 0;
		}
	}
}

@media (max-width: @xf-responsiveWide)
{
	.resourceBody
	{
		display: block;
	}

	.resourceBody-sidebar
	{
		width: auto;
		border-left: none;
		border-top: @xf-borderSize solid @xf-borderColor;
	}

	.resourceSidebarGroup
	{
		max-width: 600px;
		margin-left: auto;
		margin-right: auto;
	}
}]]></template>
  <template type="public" title="meeting_search_filter" version_id="1000510" version_string="1.0.5 Alpha"><![CDATA[<xf:form action="{{ link('meetings') }}">
	<div class="menu-row">
    {{ phrase('meeting_owner:') }}
    <div class="u-inputSpacer">
      	<xf:textbox name="username" value="{$conditions.username}" ac="single" />
    </div>
  </div>
	
	<div class="menu-row menu-row--separated">
			{{ phrase('meeting_status:') }}
			<div class="u-inputSpacer">
				<xf:select name="status" value="{$conditions.status}">
					<xf:option value="0" selected="true" label="{{ phrase('all') }}" />
					<xf:option value="1" label="{{ phrase('status_live') }}" />
					<xf:option value="2" label="{{ phrase('status_waiting') }}" />
					<xf:option value="3" label="{{ phrase('status_closed') }}" />
				</xf:select>
			</div>
		</div>
	
	<div class="menu-row menu-row--separated">
			{{ phrase('categories:') }}
			<div class="u-inputSpacer">
				<xf:select name="category_id" value="{$conditions.category_id}">
				<xf:option value="0" selected="true">{{ phrase('(none)') }}</xf:option>

				<xf:foreach loop="$categories" value="$cat">
				  <xf:option
					value="{$cat.category_id}"
					>{$cat.title}</xf:option
				  >
        </xf:foreach>
      </xf:select>
			</div>
		</div>
	
	
	
	  <div class="menu-footer">
    <span class="menu-footer-controls">
      <xf:button type="submit" class="button--primary"
        >{{ phrase('filter') }}</xf:button
      >
    </span>
  </div>

  <xf:hiddenval name="search">1</xf:hiddenval>
</xf:form>]]></template>
  <template type="public" title="zoom_meeting_category_list_macros" version_id="1000510" version_string="1.0.5 Alpha"><![CDATA[<xf:macro name="simple_category_list"
	arg-selected="0"
	arg-pathToSelected="{{ [] }}"
	arg-children="!"
	arg-isActive="{{ false }}"
>
	<ol class="categoryList toggleTarget{{ $isActive ? ' is-active' : '' }}">

		<xf:foreach loop="$children" key="$id" value="$child">
			<xf:macro name="simple_category_list_item"
				arg-selected="{$selected}"
				arg-pathToSelected="{$pathToSelected}"
				arg-category="{$child.record}"
				arg-children="{$child}"
			/>
		
		</xf:foreach>
	</ol>
</xf:macro>

<xf:macro name="simple_category_list_item"
	arg-selected="!"
	arg-pathToSelected="{{ [] }}"
	arg-category="!"
	arg-children="!"
>
	<xf:set var="$isSelected" value="{{ $category.category_id == $selected }}" />
	<xf:set var="$hasPathToSelected" value="{$pathToSelected.{$category.category_id}}" />
	<xf:set var="$isActive" value="{{ $isSelected OR $hasPathToSelected AND $children is not empty }}" />

	<li class="categoryList-item">
		<div class="categoryList-itemRow">
			<xf:if is="$children is not empty">
				<a class="categoryList-toggler{{ $isActive ? ' is-active' : '' }}"
					data-xf-click="toggle" data-target="< :up :next"
					role="button" tabindex="0" aria-label="{{ phrase('toggle_expanded') }}"
				></a>
			<xf:else />
				<span class="categoryList-togglerSpacer"></span>
			</xf:if>
			<a href="{{ link('meetings', $category) }}" class="categoryList-link{{ $isSelected ? ' is-selected' : '' }}">
				{$category.title}
			</a>
			<span class="categoryList-label">
				<span class="label label--subtle label--smallest">{$category.meeting_count}</span>
			</span>
		</div>
		<xf:if is="$children">
		
			<xf:macro name="simple_category_list"
				arg-selected="{$selected}"
				arg-pathToSelected="{$pathToSelected}"
				arg-children="{$children}"
				arg-isActive="{$isActive}"
			/>
		</xf:if>
	</li>
</xf:macro>

<xf:macro name="simple_list_block" arg-categoryTree="!" arg-selected="{{ 0 }}">
	<div class="block">
		<div class="block-container">
			<h3 class="block-header">{{ phrase('categories') }}</h3>
			<div class="block-body">
				<xf:if is="$categoryTree.count()">
					<xf:macro name="simple_category_list"
						arg-children="{$categoryTree}"
						arg-isActive="{{ true }}"
						arg-selected="{$selected}"
						arg-pathToSelected="{{ $selected ? $categoryTree.getPathTo($selected) : [] }}" />
				<xf:else />
					<div class="block-row">{{ phrase('n_a') }}</div>
				</xf:if>
				
			</div>
		</div>
	</div>
</xf:macro>]]></template>
  <template type="public" title="zoom_meeting_joiners" version_id="1000710" version_string="1.0.7 Alpha"><![CDATA[<xf:title>{$meeting.topic}</xf:title>

<xf:breadcrumb source="$meeting.Category.getBreadcrumbs()" />
<xf:macro template="zoom_meeting_macro" name="header"
	arg-meeting="{$meeting}" />

<xf:macro template="zoom_meeting_macro" name="tabs"
	arg-meeting="{$meeting}"
	arg-selected="joiner" />

<div class="block">
    <div class="block-container">
        <div class="block-body">
            <xf:datalist data-xf-init="responsive-data-list">
				<xf:if is="$users is not empty">
					<xf:datarow rowtype="header">
						<xf:cell>{{ phrase('zoom_meeting_username') }}</xf:cell>
						<xf:cell>{{ phrase('zoom_meeting_join_date') }}</xf:cell>
						<xf:cell>{{ phrase('zoom_meeting_left_date') }}</xf:cell>
					</xf:datarow>

						<xf:foreach loop="$users" value="$user">
							<xf:datarow>
								<xf:cell>{{ $user.username }}</xf:cell>
								<xf:cell><xf:date time="{$user.join_date}" /></xf:cell>
								<xf:if is="{{$user.left_date}}">
									<xf:cell><xf:date time="{$user.left_date}" /></xf:cell>
								<xf:else/>
									<xf:cell>{{ phrase('zoom_meeting_joined') }}</xf:cell>
								</xf:if>
							</xf:datarow>
                    </xf:foreach>
                <xf:else />
                    <xf:datarow>
                        <xf:cell colspan="2">{{ phrase('no_user_found') }}</xf:cell>
                    </xf:datarow>
                </xf:if>
            </xf:datalist>
        </div>
    </div>
    <xf:if contentcheck="true">
        <div class="block-outer block-outer--after">
            <xf:contentcheck>
                <xf:pagenav
                        page="{$page}" perpage="{$perPage}" total="{$total}"
                        link="meetings/joiners" data="{$meeting}"
                        wrapperclass="block-outer-main" />
            </xf:contentcheck>
        </div>
    </xf:if>
</div>]]></template>
  <template type="public" title="zoom_meeting_list.less" version_id="1000110" version_string="1.0.1 Alpha"><![CDATA[@_structItem-avatarSize: 36px;
@_structItem-avatarSizeExpanded: 48px;
@_structItem-avatarSizeEnd: @avatar-xxs;
@_structItem-cellPaddingH: ((@xf-paddingMedium) + (@xf-paddingLarge)) / 2; // average
@_structItem-cellPaddingV: @xf-paddingLarge;

.meeting_start_time{
	padding-bottom:8px !important;
}
.structItemContainer
{
	border-collapse: collapse;
	list-style: none;
	margin: 0;
	padding: 0;
	width: 100%;
}

.structItemContainer-group
{
}

.structItemContainer > .structItem:first-child,
.structItemContainer > .structItemContainer-group:first-child > .structItem:first-child
{
	border-top: none;
}

.structItem
{
	display: table;
	table-layout: fixed;
	border-collapse: collapse;
	border-top: @xf-borderSize solid @xf-borderColorFaint;
	list-style: none;
	margin: 0;
	padding: 0;
	width: 100%;

	&.is-highlighted,
	&.is-moderated
	{
		background: @xf-contentHighlightBg;
	}

	&.is-deleted
	{
		opacity: .7;

		.structItem-title > *
		{
			text-decoration: line-through;
		}
	}

	&.is-mod-selected
	{
		background: @xf-inlineModHighlightColor;
		opacity: 1;
	}
}

.structItem-cell
{
	display: table-cell;
	vertical-align: top;
	padding: @_structItem-cellPaddingV @_structItem-cellPaddingH;

	.structItem--middle &
	{
		vertical-align: middle;
	}

	&.structItem-cell--vote
	{
		width: (40px + (@_structItem-cellPaddingH) * 2);
	}

	&.structItem-cell--icon
	{
		width: ((@_structItem-avatarSize) + (@_structItem-cellPaddingH) * 2);
		position: relative;

		&.structItem-cell--iconExpanded
		{
			width: ((@_structItem-avatarSizeExpanded) + (@_structItem-cellPaddingH) * 2);
		}

		&.structItem-cell--iconEnd
		{
			width: ((@_structItem-avatarSizeEnd) + (@_structItem-cellPaddingH) * 2);
			padding-left: @_structItem-cellPaddingH / 2;

			.structItem-iconContainer
			{
				padding-top: @xf-paddingMedium;
			}
		}

		&.structItem-cell--iconFixedSmall
		{
			width: (60px + (@_structItem-cellPaddingH) * 2);
		}

		&.structItem-cell--iconFixedSmallest
		{
			width: ((@_structItem-avatarSizeEnd) + (@_structItem-cellPaddingH) * 2);
		}

		.solutionIcon
		{
			padding-left: 0;
			padding-right: 0;
		}
	}

	&.structItem-cell--meta
	{
		width: 135px;
	}

	&.structItem-cell--latest
	{
		width: 190px;
		text-align: right;
	}
}

.structItem-iconContainer
{
	position: relative;

	img
	{
		display: block;
		width: 100%;
	}

	.avatar
	{
		.m-avatarSize(@_structItem-avatarSize);

		&.avatar--xxs
		{
			.m-avatarSize(@_structItem-avatarSizeEnd);
		}
	}

	.structItem-secondaryIcon
	{
		position: absolute;
		right: -5px;
		bottom: -5px;

		.m-avatarSize(@_structItem-avatarSize / 2  + 2px);
	}

	.structItem-cell--iconExpanded &
	{
		.avatar
		{
			.m-avatarSize(@_structItem-avatarSizeExpanded);
		}

		.structItem-secondaryIcon
		{
			.m-avatarSize(@_structItem-avatarSizeExpanded / 2 - 2px);
		}
	}
}

.structItem-title
{
	font-size: @xf-fontSizeLarge;
	font-weight: @xf-fontWeightNormal;
	margin: 0;
	padding: 0;

	.label
	{
		font-weight: @xf-fontWeightNormal;
	}

	.is-unread &
	{
		font-weight: @xf-fontWeightHeavy;
	}
}

.structItem-minor
{
	font-size: @xf-fontSizeSmaller;
	color: @xf-textColorMuted;

	.m-hiddenLinks();
}

.structItem-parts
{
	.m-listPlain();
	display: inline;

	> li
	{
		display: inline;
		margin: 0;
		padding: 0;

		&:nth-child(even)
		{
			color: @xf-textColorDimmed;
		}

		&:before
		{
			content: "\00B7\20";
		}

		&:first-child:before
		{
			content: "";
			display: none;
		}
	}
}

.structItem-pageJump
{
	margin-left: 8px;
	font-size: @xf-fontSizeSmallest;

	a
	{
		.xf-chip();
		text-decoration: none;
		border-radius: @xf-borderRadiusSmall;
		padding: 0 3px;
		opacity: .5;
		.m-transition();

		.structItem:hover &,
		.has-touchevents &
		{
			opacity: 1;
		}

		&:hover
		{
			text-decoration: none;
			.xf-chipHover();
		}
	}
}

.structItem-statuses,
.structItem-extraInfo
{
	.m-listPlain();
	float: right;

	> li
	{
		float: left;
		margin-left: 8px;
	}

	input[type=checkbox]
	{
		.m-checkboxAligner();
	}
}

.structItem-statuses .reactionSummary
{
	vertical-align: -2px;
}

.structItem-extraInfo .reactionSummary
{
	vertical-align: middle;
}

.structItem-status
{
	&::before
	{
		.m-faBase();
		display: inline-block;
		font-size: 90%;
		color: @xf-textColorMuted;
	}

	&--deleted::before { .m-faContent(@fa-var-trash-alt, .875em); }
	&--locked::before { .m-faContent(@fa-var-lock, .875em); }
	&--moderated::before { .m-faContent(@fa-var-shield, 1em); color: @xf-textColorAttention; }
	&--redirect::before { .m-faContent(@fa-var-external-link, 1em); }
	&--starred::before { .m-faContent(@fa-var-star, 1.125em); color: @xf-starFullColor; }
	&--sticky::before { .m-faContent(@fa-var-thumbtack, .75em); }
	&--watched::before { .m-faContent(@fa-var-bell, .875em); }

	&--solved::before { .m-faContent(@fa-var-check-circle, 1em); color: @xf-votePositiveColor; }
	&--attention::before { .m-faContent(@fa-var-bullhorn, 1.125em); color: @xf-textColorAttention; }
	&--upvoted::before { .m-faContent(@fa-var-thumbs-up, 1em); }
	&--downvoted::before { .m-faContent(@fa-var-thumbs-down, 1em); }
}

.structItem.structItem--note
{
	.xf-contentHighlightBase();
	color: @xf-textColorFeature;

	.structItem-cell
	{
		padding-top: @_structItem-cellPaddingV / 2;
		padding-bottom: @_structItem-cellPaddingV / 2;
		font-size: @xf-fontSizeSmaller;
		text-align: center;
	}
}

@media (max-width: @xf-responsiveWide)
{
	.structItem-cell
	{
		vertical-align: top;

		&.structItem-cell--meta
		{
			width: 115px;
			font-size: @xf-fontSizeSmaller;
		}

		&.structItem-cell--latest
		{
			width: 140px;
			font-size: @xf-fontSizeSmaller;
		}
	}
}

@media (max-width: @xf-responsiveMedium)
{
	.structItem-cell
	{
		//padding: (@_structItem-cellPaddingV) / 2 @_structItem-cellPaddingH;

		&.structItem-cell--icon
		{
			.structItem-cell + &
			{
				padding-left: 0;
				width: ((@_structItem-avatarSize) + (@_structItem-cellPaddingH));
			}
		}

		&.structItem-cell--main,
		&.structItem-cell--newThread
		{
			display: block;
			padding-bottom: .2em;

			.structItem-cell + &
			{
				padding-left: 0;
			}
		}

		&.structItem-cell--meta
		{
			display: block;
			width: auto;
			float: left;
			padding-top: 0;
			padding-left: 0;
			padding-right: 0;
			color: @xf-textColorMuted;

			.structItem-minor
			{
				display: none;
			}

			.pairs
			{
				> dt,
				> dd
				{
					display: inline;
					float: none;
					margin: 0;
				}
			}
		}

		&.structItem-cell--latest
		{
			display: block;
			width: auto;
			float: left;
			padding-top: 0;
			padding-left: 0;

			&:before
			{
				content: "\00A0\00B7\20";
				color: @xf-textColorMuted;
			}

			a
			{
				color: @xf-textColorMuted;
			}

			.structItem-minor
			{
				display: none;
			}
		}

		&.structItem-cell--iconEnd
		{
			display: none;
		}
	}

	.structItem-pageJump,
	.structItem-extraInfoMinor
	{
		display: none;
	}

	.is-unread .structItem-latestDate
	{
		font-weight: @xf-fontWeightNormal;
	}
}

@media (max-width: @xf-responsiveNarrow)
{
	.structItem-parts
	{
		.structItem-startDate
		{
			display: none;
		}
	}

	.structItem.structItem--quickCreate
	{
		.structItem-cell--icon,
		.structItem-cell--vote
		{
			display: none;
		}

		.structItem-cell--newThread
		{
			padding-left: @_structItem-cellPaddingH;
			padding-bottom: @_structItem-cellPaddingH;
		}
	}
}

// ############################ RESOURCE LIST ######################

.structItem-resourceTagLine
{
	font-size: @xf-fontSizeSmaller;
	margin-top: @xf-paddingSmall;
}

.structItem-cell.structItem-cell--resourceMeta
{
	width: 238px;

	.structItem-metaItem
	{
		margin-top: 3px;

		&:first-child
		{
			margin-top: 0;
		}
	}
}

.structItem-metaItem--rating
{
	font-size: @xf-fontSizeSmall;
}

.structItem-status
{
	&--team::before { .m-faContent(@fa-var-users-crown); color: @xf-textColorAttention; }
}

@media (max-width: @xf-responsiveWide)
{
	.structItem-cell.structItem-cell--resourceMeta
	{
		width: 200px;
		font-size: @xf-fontSizeSmaller;
	}
}

@media (max-width: @xf-responsiveMedium)
{
	.structItem-cell.structItem-cell--resourceMeta
	{
		display: block;
		width: auto;
		float: left;
		padding-top: 0;
		padding-left: 0;
		padding-right: 0;
		color: @xf-textColorMuted;

		.pairs
		{
			display: inline;

			&:before,
			&:after
			{
				display: none;
			}

			> dt,
			> dd
			{
				display: inline;
				float: none;
				margin: 0;
			}
		}

		.structItem-metaItem
		{
			display: inline;
			margin-top: 0;
		}

		.ratingStarsRow
		{
			display: inline;

			.ratingStarsRow-text
			{
				display: none;
			}
		}

		.ratingStars
		{
			font-size: 110%;
			vertical-align: -.2em;
		}

		.structItem-metaItem--lastUpdate > dt
		{
			display: none;
		}

		.structItem-metaItem + .structItem-metaItem:before
		{
			display: inline;
			content: "\20\00B7\20";
			color: @xf-textColorMuted;
		}
	}
}

// #################################### RESOURCE BODY / VIEW ########################

.resourceBody
{
	display: flex;
}

.resourceBody-main
{
	flex: 1;
	min-width: 0;
	padding: @xf-blockPaddingV @xf-blockPaddingH;
}

.resourceBody-main .bbWrapper
{
	.m-clearFix();
}

.resourceBody-sidebar
{
	flex: 0 0 auto;
	width: 250px;
	.xf-contentAltBase();
	border-left: @xf-borderSize solid @xf-borderColor;
	padding: @xf-blockPaddingV @xf-blockPaddingH;
	font-size: @xf-fontSizeSmall;

	> :first-child
	{
		margin-top: 0;
	}

	> :last-child
	{
		margin-bottom: 0;
	}
}

.resourceBody-fields
{
	&.resourceBody-fields--before
	{
		margin-bottom: @xf-paddingLarge;
		padding-bottom: @xf-paddingMedium;
		border-bottom: @xf-borderSize solid @xf-borderColorLight;
	}

	&.resourceBody-fields--after
	{
		margin-top: @xf-paddingLarge;
		padding-top: @xf-paddingMedium;
		border-top: @xf-borderSize solid @xf-borderColorLight;
	}
}

.resourceBody-attachments
{
	margin: .5em 0;
}

.resourceBody .actionBar-set
{
	margin-top: @xf-messagePadding;
	font-size: @xf-fontSizeSmall;
}

.resourceSidebarGroup
{
	margin-bottom: @xf-elementSpacer;

	&.resourceSidebarGroup--buttons
	{
		> .button
		{
			display: block;
			margin: 5px 0;

			&:first-child
			{
				margin-top: 0;
			}

			&:last-child
			{
				margin-bottom: 0;
			}
		}
	}
}

.resourceSidebarGroup-title
{
	margin: 0;
	padding: 0;

	font-size: @xf-fontSizeLarge;
	font-weight: @xf-fontWeightNormal;
	color: @xf-textColorFeature;
	padding-bottom: @xf-paddingMedium;

	.m-hiddenLinks();
}

.resourceSidebarList
{
	.m-listPlain();

	> li
	{
		padding: @xf-paddingSmall 0;

		&:first-child
		{
			padding-top: 0;
		}

		&:last-child
		{
			padding-bottom: 0;
		}
	}
}

@media (max-width: @xf-responsiveWide)
{
	.resourceBody
	{
		display: block;
	}

	.resourceBody-sidebar
	{
		width: auto;
		border-left: none;
		border-top: @xf-borderSize solid @xf-borderColor;
	}

	.resourceSidebarGroup
	{
		max-width: 600px;
		margin-left: auto;
		margin-right: auto;
	}
}]]></template>
  <template type="public" title="zoom_meeting_listing_list_macros" version_id="1000710" version_string="1.0.7 Alpha"><![CDATA[<xf:macro name="listing" arg-meeting="!" arg-category="{{ null }}" arg-showWatched="{{ true }}" arg-allowInlineMod="{{ true }}" arg-chooseName="" arg-extraInfo="">
	<xf:css src="zoom_meeting_list.less" />

	<div class="structItem structItem--resource " id="meeting-{{$meeting.meeting_id}}" data-author="{{ $meeting.User.username ?: '' }}">
		<div class="structItem-cell structItem-cell--main" data-xf-init="touch-proxy">
			<div class="structItem-title"> <a href="{{ link('meetings/view', $meeting) }}" data-tp-primary="on">{$meeting.topic}</a> </div>
			<div class="structItem-minor">
				<ul class="structItem-parts">
					<li>
						<xf:username user="$meeting.User" defaultname="{$meeting.User.username}" />
					</li>
					<li class="structItem-startDate">
						<xf:date time="{$meeting.start_time}" /> </li>
					<li>{{ snippet($meeting.Category.title, 50, {'stripBbCode': true}) }}</li>
				</ul>
			</div>
		</div>
		<div class="block-body block-row block-row--minor structItem-cell structItem-cell--resourceMeta">
			    
					<xf:if is="$meeting.start_time < $xf.time && $meeting.getMeetingEnd() > $xf.time"> 
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('meeting_status') }}</dt>
							<dd  id="meeting-live-{{$meeting.meeting_id}}" class="status_live">{{phrase('status_live')}}</dd>
						</dl>
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('meeting_end') }}</dt>
							<dd id="meeting-end-{{$meeting.meeting_id}}"><xf:date time="{$meeting.getMeetingEnd()}" /></dd>
						</dl>
						<xf:if is="$meeting.getMeetingUserCount()"> 
							<dl class="pairs pairs--justified">
								<dt>{{ phrase('user_joined') }}</dt>
								<dd>{{$meeting.getMeetingUserCount()}}</dd>
							</dl>
						</xf:if>
					
					<xf:elseif is="$meeting.start_time > $xf.time"/> 
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('meeting_status') }}</dt>
							<dd  id="meeting-waiting-{{$meeting.meeting_id}}"class="status_waiting">{{phrase('status_waiting')}}</dd>
						</dl>
						<xf:include template="zoom_meeting_timer_counter_js" />
						<dl class="pairs pairs--justified meeting-counter-{{$meeting.meeting_id}}">
							<dt>{{ phrase('left_time') }}</dt>
							<dd>
								<xf:macro template="zoom_meeting_macro" name="leftTime" arg-meeting="{$meeting}" />
							</dd>
						</dl>
					<xf:elseif is="$meeting.start_time < $xf.time"/> 
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('meeting_status') }}</dt>
							<dd class="status_closed" id="meeting-closed-{{$meeting.meeting_id}}">{{phrase('status_closed')}}</dd>
						</dl>
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('meeting_end') }}</dt>
							<dd><xf:date time="{$meeting.getMeetingEnd()}" /></dd>
						</dl>
						
					</xf:if>
			
		</div>
	</div>
</xf:macro>]]></template>
  <template type="public" title="zoom_meeting_macro" version_id="1000710" version_string="1.0.7 Alpha"><![CDATA[<xf:macro name="header" arg-meeting="!">
	<xf:page option="headerHtml">
		<div class="contentRow contentRow--hideFigureNarrow">
			<div class="contentRow-main">
				<div class="p-title">
					<h1 class="p-title-value">
						
							{$meeting.topic}
						
					</h1> 
				</div>
				<xf:if is="{{$xf.visitor.isMemberOf($meeting.join_usergroup_ids)}}">
					<div class="p-title-pageAction" style="float:right;">
							<xf:macro name="uper_copy_key" arg-url="{{$meeting.z_join_url}}" arg-success="{{phrase('join_url_copy_successfully')}}" arg-targclass="js-joinUrl{{$meeting.meeting_id}}"/>
					</div>
				</xf:if>
				<div class="p-description">
					<ul class="listInline listInline--bullet">
						<li>
							<xf:fa icon="fa-user" title="{{ phrase('author')|for_attr }}" /> <span class="u-srOnly">{{ phrase('creater') }}</span>
							<xf:username user="{$meeting.User}" defaultname="{$meeting.User.username}" class="u-concealed" /> </li>
						<li>
							<xf:fa icon="fa-clock" title="{{ phrase('xfrm_creation_date')|for_attr }}" /> <span class="u-srOnly">{{ phrase('creation_date') }}</span>
							<a href="{{ link('meetings', $meeting) }}" class="u-concealed">
								<xf:date time="{$meeting.created_date}" />
							</a>
						</li>
					</ul>
				</div>
			</div>
		</div>
	</xf:page>
</xf:macro>
<xf:macro name="tabs" arg-meeting="!" arg-selected="!">
		<div class="tabs tabs--standalone">
			<div class="hScroller" data-xf-init="h-scroller">
				<span class="hScroller-scroll">
					<a class="tabs-tab {{ $selected == 'overview' ? 'is-active' : '' }}" href="{{ link('meetings/view', $meeting) }}">{{ phrase('zoom_meeting_overview') }}</a>
					<a class="tabs-tab {{ $selected == 'discussion' ? 'is-active' : '' }}" href="{{ link('threads', $meeting.Thread) }}">{{ phrase('zoom_meeting_discussion') }}</a>
					<a class="tabs-tab {{ $selected == 'joiner' ? 'is-active' : '' }}" href="{{ link('meetings/joiners', $meeting) }}">{{ phrase('meeting_zoom_joined') }}</a>
				</span>
			</div>
		</div>
</xf:macro>
<xf:macro name="leftTime" arg-meeting="!">
		<div id="meeting-counter-{{$meeting.meeting_id}}"> <span class="label label--accent label--small label--counter" id="days-meeting-{{$meeting.meeting_id}}">
									 {{phrase('meeting_DD')}}
								</span> <span class="label label--accent label--small label--counter" id="hours-meeting-{{$meeting.meeting_id}}">
									 {{phrase('meeting_HH')}}
								</span> <span class="label  label--accent label--small label--counter" id="minutes-meeting-{{$meeting.meeting_id}}">
									{{phrase('meeting_MM')}}
								</span> <span class="label label--accent label--small label--counter" id="seconds-meeting-{{$meeting.meeting_id}}">
									 {{phrase('meeting_SS')}}
								</span> 
	</div>
</xf:macro>
<xf:macro name="meetingInfo" arg-meeting="!">
	<xf:sidebar key="meetingInfo">
		<div class="block">
			<div class="block-container">
				<h3 class="block-minorHeader">{{ phrase('meeting_info') }}</h3>
				
				<div class="block-body block-row block-row--minor">
					<xf:if is="$meeting.start_time < $xf.time && $meeting.getMeetingEnd() > $xf.time"> 
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('meeting_status') }}</dt>
							<dd id="meeting-live-{{$meeting.meeting_id}}" class="status_live">{{phrase('status_live')}}</dd>
						</dl>
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('meeting_start') }}</dt>
							<dd id="meeting-start-{{$meeting.meeting_id}}"><xf:date time="{$meeting.start_time}" /></dd>
						</dl>
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('meeting_end') }}</dt>
							<dd id="meeting-end-{{$meeting.meeting_id}}"><xf:date time="{$meeting.getMeetingEnd()}" /></dd>
						</dl>
					<xf:elseif is="$meeting.start_time > $xf.time"/> 
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('meeting_status') }}</dt>
							<dd id="meeting-waiting-{{$meeting.meeting_id}}" class="status_waiting">{{phrase('status_waiting')}}</dd>
						</dl>
						<xf:include template="zoom_meeting_timer_counter_js" />
						<dl class="pairs pairs--justified meeting-counter-{{$meeting.meeting_id}}">
							<dt>{{ phrase('left_time') }}</dt>
							<dd>
								<xf:macro template="zoom_meeting_macro" name="leftTime" arg-meeting="{$meeting}" />
							</dd>
						</dl>
					<xf:elseif is="$meeting.start_time < $xf.time"/> 
						<dl class="pairs pairs--justified">
							<dt >{{ phrase('meeting_status') }}</dt>
							<dd class="status_closed">{{phrase('status_closed')}}</dd>
						</dl>
						<dl class="pairs pairs--justified">
							<dt>{{ phrase('meeting_end') }}</dt>
							<dd><xf:date time="{$meeting.getMeetingEnd()}" /></dd>
						</dl>
						
					</xf:if>
					<dl class="pairs pairs--justified">
						<dt>{{ phrase('meeting_duration') }}</dt> 
						<dd>
							{{ phrase('meeting_duration_min', {'duration': $meeting.duration}) }}
						</dd>
					</dl>
				</div>
				
			</div>
		</div>
	</xf:sidebar>
</xf:macro>
<xf:macro name="meetingJoin" arg-meeting="!">
	<xf:sidebar key="meetingJoin">
		<div class="block">
			<div class="block-container">
				<h3 class="block-minorHeader">{{ phrase('meeting_join') }}</h3>

				<div class="block-body block-row block-row--minor">
					<dl class="pairs pairs--justified"><dt>{{ phrase('meeting_join_url') }}</dt> <dd>
							<xf:macro name="copy_key" arg-url="{{$meeting.z_join_url}}" arg-success="{{phrase('join_url_copy_successfully')}}" arg-targclass="js-join-copyUrl{{$meeting.meeting_id}}"/>
						</dd></dl>
					</div>
			</div>
		</div>
	</xf:sidebar>
</xf:macro>
<xf:macro name="simple_meeting" arg-meeting="!">
	<div class="contentRow">
		<div class="contentRow-main contentRow-main--close">
									<a href="{{ link('meetings', $meeting) }}">{$meeting.topic}</a>
									<div class="contentRow-minor contentRow-minor--smaller">
										<ul class="listInline listInline--bullet">
											<li>{{ $meeting.User.username ?: $meeting.username }}</li>
											<li>{{ phrase('meetimg_date:') }} <xf:date time="{$meeting.start_time}" /></li>
										</ul>
									</div>
		</div>
	</div>
</xf:macro>
<xf:macro name="otherMetings" arg-otherMeetings="!">
	<xf:sidebar key="otherMetings">
		<xf:if is="$otherMeetings is not empty">
			<div class="resourceBody-sidebar">
				<div class="resourceSidebarGroup">
					<h4 class="resourceSidebarGroup-title">
							 {{ phrase('other_meeting') }}
							</h4>
					<ul class="resourceSidebarList">
						<xf:foreach loop="$otherMeetings" value="$meeting">
							<li>
								<xf:macro name="simple_meeting" arg-meeting="{$meeting}" /> 
							</li>
						</xf:foreach>
					</ul>
				</div>
			</div>
		</xf:if>
	</xf:sidebar>
</xf:macro>
<xf:macro name="copy_key" arg-url="!" arg-success="!" arg-targclass="">
	<code class="{{$targclass}}" style="display:none;">{$url}</code>
	<xf:button icon="copy"
		data-xf-init="copy-to-clipboard"
		data-copy-target=".{{$targclass}}"
		data-success="{{$success}}"
		class="button--link is-hidden" />
</xf:macro>
<xf:macro name="uper_copy_key" arg-url="!" arg-success="!" arg-targclass="">
	<code class="{{$targclass}}" style="display:none;">{$url}</code>
	<xf:button icon="copy"
		data-xf-init="copy-to-clipboard"
		data-copy-target=".{{$targclass}}"
		data-success="{{$success}}"
	    class="is-hidden button--cta" >{{phrase('copy_join_url')}}</xf:button>
</xf:macro>]]></template>
  <template type="public" title="zoom_meeting_timer_counter_js" version_id="1000710" version_string="1.0.7 Alpha"><![CDATA[<xf:js>
	
$(document).ready(function() {

	function DateTimeConverter(unixdatetime) {
		// Convert UNIX timestamp to ISO string (UTC format)
		var utcDateTime = new Date(unixdatetime * 1000).toISOString(); // Returns in 'YYYY-MM-DDTHH:mm:ss.sssZ' format

		// Extract the human-readable date and time in UTC
		var datePart = utcDateTime.split('T')[0];  // 'YYYY-MM-DD' part
		var timePart = utcDateTime.split('T')[1].split('.')[0]; // 'HH:mm:ss' part, removing milliseconds

		// Combine into the desired format
		var fulldate = datePart + " " + timePart;
		
		// Split into parts for ISO format processing
		var tempCountTimmer = fulldate.split(/[- :]/);
		
		// Construct a UTC Date object
		var tempDateObject = new Date(Date.UTC(tempCountTimmer[0], tempCountTimmer[1] - 1, tempCountTimmer[2], tempCountTimmer[3], tempCountTimmer[4], tempCountTimmer[5]));
		var CountDownDateTime = new Date(tempDateObject).getTime();
		
		return CountDownDateTime;
	}

	function timmerCounter(meeting_id, start_datetime) {
		let meet_id = meeting_id;

		// Convert start datetime to UTC countdown date
		let humanDateTime = DateTimeConverter(start_datetime);
		let countDownDate = new Date(humanDateTime).getTime();

		let counter = setInterval(function() {
			let now = new Date().getTime();
			let timeDistance = countDownDate - now;

			// Check if timeDistance is valid and display countdown
			if (timeDistance >= 0) {
				$("#days-meeting-" + meet_id).html(Math.floor(timeDistance / (1000 * 60 * 60 * 24)) + " D");
				$("#hours-meeting-" + meet_id).html(Math.floor((timeDistance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)) + " H");
				$("#minutes-meeting-" + meet_id).html(Math.floor((timeDistance % (1000 * 60 * 60)) / (1000 * 60)) + " M");
				$("#seconds-meeting-" + meet_id).html(Math.floor((timeDistance % (1000 * 60)) / 1000) + " S");
			}

			// Hide countdown if timeDistance is negative (countdown over)
			if (timeDistance < 0) {
								 
				clearInterval(counter);
				$(".meeting-counter-" + meet_id).hide();
				$("#meeting-counter-" + meet_id).hide();
				$('#meeting-waiting-'+meet_id).text('Live');
				$('#meeting-waiting-'+meet_id).removeClass('status_waiting').addClass('status_live');

			}
		}, 1000);
	}

	// Initialize countdown with UTC timestamp values
	timmerCounter({{$meeting.meeting_id}}, {{$meeting.start_time}});
});

</xf:js>]]></template>
  <template type="public" title="zoom_meeting_view" version_id="1000710" version_string="1.0.7 Alpha"><![CDATA[<xf:title>{$meeting.topic}</xf:title>

<xf:breadcrumb source="$meeting.Category.getBreadcrumbs()" />
<xf:css src="general_zoom_meeting.less" />
<xf:css src="meeting_overiew.less"/>
<xf:macro template="zoom_meeting_macro" name="header"
	arg-meeting="{$meeting}" />

<xf:macro template="zoom_meeting_macro" name="tabs"
	arg-meeting="{$meeting}"
	arg-selected="overview" />


<div class="block">
	<div class="block-container">
		<div class="block-body lbContainer js-resourceBody"
			data-xf-init="lightbox"
			data-lb-id="meeting-{$meeting.meeting_id}"
			data-lb-caption-desc="{{ $meeting.User ? $meeting.User.username : $meeting.username }} &middot; {{ date_time($meeting.created_date) }}">

			
			<div class="resourceBody">
				<article class="resourceBody-main js-lbContainer">
					
					{{ bb_code($meeting.Thread.FirstPost.message, 'post', $meeting.Thread.FirstPost) }}
					
				</article>
				<xf:include template="zoom_meeting_timer_counter_js" /> 
				<xf:macro template="zoom_meeting_macro" name="meetingInfo"
					arg-meeting="{$meeting}"
				 />
				<xf:if is="{{$xf.visitor.isMemberOf($meeting.join_usergroup_ids)}}">
					<xf:macro template="zoom_meeting_macro" name="meetingJoin"
						arg-meeting="{$meeting}"
					 />
				</xf:if>
				<xf:if is="$otherMeetings is not empty">
					<xf:macro template="zoom_meeting_macro" name="otherMetings"
						arg-otherMeetings="{$otherMeetings}"
					 />
				</xf:if>
			</div>
		</div>
	</div>
</div>]]></template>
  <template type="public" title="zoom_meetings" version_id="1000510" version_string="1.0.5 Alpha"><![CDATA[<xf:title page="{$page}">{{ phrase('zoom_meetings') }}</xf:title>

<xf:page option="searchConstraints" value="{{ {
	phrase('fs_auction_auctions'): {'search_type': 'fs_auction_auctions'}
} }}" />

<xf:css src="general_zoom_meeting.less" />
<xf:css src="zoom_meeting_list.less" />
<div class="block" data-type="zoom-meeting">
	
	<div class="block-container">
		<xf:macro name="search_menu" arg-conditions="{$conditions}" />
		<!--Listing View--->
		<div class="block-body">
				<xf:if is="$meetings is not empty">
					
					<div class="structItemContainer">
						<xf:foreach loop="$meetings" value="$meeting">
							<xf:macro template="zoom_meeting_listing_list_macros" name="listing" arg-meeting="{$meeting}" />  </xf:foreach>
						</div>
				
				<xf:else />
						<div class="block-row"> {{ phrase('no_meeting_found') }} </div>
				</xf:if>
			<div class="block-footer"> <span class="block-footer-counter">{{ display_totals($meetings, $total) }}</span
        >
      </div>
    </div>
  </div>

  <div class="block-outer block-outer--after">
    <xf:pagenav
      page="{$page}"
      perpage="{$perPage}"
      total="{$total}"
      link="meetings"
      params="{$filters}"
      wrapperclass="block-outer-main"
    />
    <xf:showignored wrapperclass="block-outer-opposite" />
  </div>
</div>

<xf:page option="sideNavTitle">{{ phrase('categories') }}</xf:page>

<xf:sidenav>
  <xf:macro
    template="zoom_meeting_category_list_macros"
    name="simple_list_block"
    arg-categoryTree="{$categoryTree}"
  />
</xf:sidenav>

<!-- Filter Bar Macro Start -->

<xf:macro name="search_menu" arg-conditions="!">
  <div class="block-filterBar">
    <div class="filterBar">
      <a
        class="filterBar-menuTrigger"
        data-xf-click="menu"
        role="button"
        tabindex="0"
        aria-expanded="false"
        aria-haspopup="true"
        >{{ phrase('filters') }}</a
      >
      <div
        class="menu menu--wide"
        data-menu="menu"
        aria-hidden="true"
        data-href="{{ link('meetings/refine-search', null, $conditions)}}"
        data-load-target=".js-filterMenuBody"
      >
        <div class="menu-content">
          <h4 class="menu-header">{{ phrase('show_only:') }}</h4>
          <div class="js-filterMenuBody">
            <div class="menu-row">{{ phrase('loading...') }}</div>
          </div>
        </div>
      </div>
    </div>
  </div>
</xf:macro>]]></template>
</templates>
