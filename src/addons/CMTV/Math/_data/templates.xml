<?xml version="1.0" encoding="utf-8"?>
<templates>
  <template type="admin" title="CMTV_Math_option_json" version_id="3000170" version_string="3.0.1"><![CDATA[<xf:formrow rowtype="input"
			label="{$option.title}"
			hint="{$hintHtml}"
			explain="{$explainHtml}"
			html="{$listedHtml}"
			rowclass="{$rowClass}">
	<xf:codeeditor
				   mode="json"
				   name="{$inputName}"
				   value="{$option.option_value}"
				   class="codeEditor--autoSize"
				   rowtype="fullWidth noLabel" />
</xf:formrow>]]></template>
  <template type="public" title="CMTV_Math.less" version_id="3000170" version_string="3.0.1"><![CDATA[//
// Katex settings
//

 .katex-display
{
	margin: 0 !important;
	.base { margin: 15px/2.2 0; }
	
	overflow: hidden;
    overflow-x: auto;

	&::-webkit-scrollbar
	{
		height: 5px;
	}

	&::-webkit-scrollbar-track
	{
		background: @xf-contentAltBg;
		border-radius: @xf-borderRadiusSmall;
	}

	&::-webkit-scrollbar-thumb
	{
		background: @xf-borderColor;
		border-radius: @xf-borderRadiusSmall;

		&:hover
		{
			background: @xf-borderColorHeavy;
		}
	}
}

.katex > .katex-html
{
	white-space: normal;
}


//
// "Insert math" dialog
//

._fadeInOut()
{
	opacity: 0;
	transition: opacity .2s;
	&.showing
	{
		opacity: 1;
	}
}

#editor_math_form
{	
	.preview-loading,
	.preview-container
	{
		._fadeInOut();
	}
	
	.preview-loading
	{
		margin-right: 5px;
	}
	
	.preview-container
	{
		display: flex;
		align-items: center;
		justify-content: center;
		
		min-height: 100px;
		
		.empty, .error
		{
			font-size: 120%;
			color: @xf-textColorMuted;
		}
		
		.error
		{
			color: @xf-errorColor;
		}
		
		.preview
		{
			//overflow: auto;
		}
	}
}]]></template>
  <template type="public" title="CMTV_Math_insert_math_dialog" version_id="4020300" version_string="4.2.3"><![CDATA[<xf:title>{{ phrase('CMTV_Math_insert_math') }}</xf:title>

<xf:js src="CMTV/Math/insert-math-dialog.js" min="1" addon="CMTV/Math" />

<form class="block" id="editor_math_form" data-xf-init="insert-math-form">
	<div class="block-container">
		<div class="block-body">
			<xf:radiorow name="math_type" label="{{ phrase('CMTV_Math_type') }}" explain="{{ phrase('CMTV_Math_type_explain') }}">
				<xf:option value="block" checked="checked" label="{{ phrase('CMTV_Math_block') }}" />
				<xf:option value="inline" label="{{ phrase('CMTV_Math_inline') }}" />
			</xf:radiorow>
			
			<xf:textarearow name="latex_input" rows="2" autosize="true" autofocus="1"
							label="{{ phrase('CMTV_Math_latex_input') }}" explain="{{ phrase('CMTV_Math_latex_input_explain') }}" />
		
			<h2 class="block-formSectionHeader">
				<span class="block-formSectionHeader-aligner">
					<span class="preview-loading"><xf:fa icon="fa-sync-alt fa-spin" /></span>
					{{ phrase('CMTV_Math_preview') }}
				</span>
			</h2>
			
			<div class="preview-container showing">
				<div class="preview">{{ phrase('preview') }}</div>
				<div class="error">{{ phrase('CMTV_Math_incorrect_latex_input') }}</div>
				<div class="empty">{{ phrase('CMTV_Math_start_typing_math') }}</div>
			</div>
		</div>
		
		<xf:submitrow submit="{{ phrase('continue') }}" id="editor_math_submit" />
	</div>
</form>]]></template>
  <template type="public" title="CMTV_Math_insert_math_jax_dialog" version_id="4040800" version_string="4.4.8"><![CDATA[<xf:title>{{ phrase('CMTV_Math_insert_math') }}</xf:title>

<xf:js src="CMTV/Math/insertMathDialog.js" addon="CMTV/Math" />

<form class="block" id="editor_math_form" data-xf-init="insert-math-form">
	<div class="block-container">
		<div class="block-body">
			<xf:radiorow name="math_type" label="{{ phrase('CMTV_Math_type') }}" explain="{{ phrase('CMTV_Math_type_explain') }}">
				<xf:option value="block" checked="checked" label="{{ phrase('CMTV_Math_block') }}" />
				<xf:option value="inline" label="{{ phrase('CMTV_Math_inline') }}" />
			</xf:radiorow>

			<xf:textarearow name="latex_input" rows="2" autosize="true" autofocus="1"id="latex_input"
							label="{{ phrase('CMTV_Math_latex_input') }}" explain="{{ phrase('CMTV_Math_latex_input_explain') }}" />

			<h2 class="block-formSectionHeader">
				<span class="block-formSectionHeader-aligner">
					<span class="preview-loading"><xf:fa icon="fa-sync-alt fa-spin" /></span>
					{{ phrase('CMTV_Math_preview') }}
				</span>
			</h2>

			<div class="preview-container showing">
				<div id="mathPreview"><formula id="preview">{{ phrase('preview') }}</formula></div>
				<div class="error" id="error">{{ phrase('CMTV_Math_incorrect_latex_input') }}</div>
				<div class="empty" id="empty">{{ phrase('CMTV_Math_start_typing_math') }}</div>
			</div>
		</div>

		<xf:submitrow submit="{{ phrase('continue') }}" id="editor_math_submit" />
	</div>
</form>

<script>
	const formulaInput = document.getElementById("latex_input");
	const outputDiv = document.getElementById("preview");
	const emptyDiv = document.getElementById("empty");
	const previewDiv = document.getElementById("mathPreview");
	const errorDiv = document.getElementById("error");
	const loadingIcon = document.querySelector(".preview-loading");

	previewDiv.style.display = "none";
	errorDiv.style.display = "none";
	outputDiv.textContent = "";

	function showLoadingIcon() {
		loadingIcon.classList.add("showing");
	}

	function hideLoadingIcon() {
		loadingIcon.classList.remove("showing");
	}

	function convertFormula() {

		const formula = formulaInput.value;
		outputDiv.textContent = "";
		showLoadingIcon();

		// Regular expression to match LaTeX delimiters or commands
		const mathJaxPattern = /\\\[|\\\]|\\\(|\\\)|\\(?:[^a-zA-Z]|[a-zA-Z]+ ?)/;
		if (mathJaxPattern.test(formula)) {

			previewDiv.style.display = "block";
			emptyDiv.style.display = "none";
			errorDiv.style.display = "none";

			var mathPreviewDiv = document.getElementById("mathPreview");

			var formulaElement = document.createElement("formula");

			formulaElement.textContent = formula;

			mathPreviewDiv.innerHTML = "";
			mathPreviewDiv.appendChild(formulaElement);

			hideLoadingIcon();

			var preview = document.getElementsByClassName("mathJaxEqu");
			MathJax.typeset(preview);

		} else {
			if (formulaInput.value.trim() === "") {
				emptyDiv.style.display = "block";
				errorDiv.style.display = "none";
			} else {
				emptyDiv.style.display = "none";
				errorDiv.style.display = "block";
			}
			previewDiv.style.display = "none";

			hideLoadingIcon();
		}
	}

	formulaInput.addEventListener("input", convertFormula);
</script>]]></template>
  <template type="public" title="CMTV_Math_js" version_id="4030100" version_string="4.3.1"><![CDATA[<script>
	const CMTV_MATH_RENDER_OPTIONS =
	{
		"delimiters":
		[
			{left: "[imath]", right: "[/imath]", display: false},
			{left: "[math]",  right: "[/math]", display: true}
		].concat({$xf.options.CMTV_Math_customMathDelimiters|raw}),

		"ignoredClasses": [].concat({$xf.options.CMTV_Math_ignoredClasses|raw}),

		"macros": {{ $xf.options.CMTV_Math_macros ? $xf.options.CMTV_Math_macros|raw : '{}' }}
	};
	
	(function ($, document)
	{
		$(document).on('xf:reinit', function (e)
		{
			renderMathInElement(document.body, CMTV_MATH_RENDER_OPTIONS);
		});
	})
	(jQuery, document);
</script>]]></template>
  <template type="public" title="CMTV_Math_katex" version_id="4030100" version_string="4.3.1"><![CDATA[<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.css" crossorigin="anonymous">

<script defer src="https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.js" crossorigin="anonymous"></script>
<script defer src="https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/contrib/auto-render.min.js" crossorigin="anonymous"></script>]]></template>
  <template type="public" title="cmtv_math_bbcode" version_id="4040500" version_string="4.4.5"><![CDATA[<mjx-container display="true" jax="CHTML">
	<formula  id="mathJaxEqu" class="mathJaxEqu">{$equation}</formula>
</mjx-container>

<script>
	var preview = document.getElementsByClassName("mathJaxEqu");

	MathJax.typeset(preview);
</script>]]></template>
  <template type="public" title="cmtv_math_bbcode_disp_inline" version_id="4040600" version_string="4.4.6"><![CDATA[<formula  id="mathJaxEqu" class="mathJaxEqu">{$equation}</formula>

<script>
	var preview = document.getElementsByClassName("mathJaxEqu");

		MathJax.typeset(preview);
</script>]]></template>
</templates>
